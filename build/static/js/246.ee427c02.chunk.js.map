{"version":3,"file":"static/js/246.ee427c02.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/Views/ContactView/ContactView.module.css?a16a","Views/ContactView/ContactView.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\n// import {deleteContact} from '../../redux/contacts-actions'\r\nimport { removeContact } from \"redux/contacts/contacts-operations\";\r\nimport { useEffect } from 'react';\r\n\r\nconst filterContact = (items, filter) => {\r\n  return items.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n};\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const items = useSelector(state => state.contacts.items);\r\n  const filter = useSelector(state => state.contacts.filter);\r\n  const newItems = filterContact(items, filter);\r\n\r\n   return ( \r\n     newItems.length ? (\r\n    <table>\r\n      <tbody> \r\n        {newItems.map(({ name, id, number }) => (\r\n              <tr key={id}>\r\n                <td>{name} :</td>\r\n                <td>{number}</td>\r\n                <td> <button  onClick={() => {\r\n                  dispatch(removeContact(id));\r\n                }}>Delete</button></td>\r\n              </tr>\r\n        ))}\r\n      </tbody>\r\n   </table>   \r\n   ) : null\r\n   )\r\n };\r\n \r\n export default ContactList;\r\n ","import { useState } from \"react\";\r\nimport { useDispatch , useSelector} from \"react-redux\";\r\nimport {addContact} from '../../redux/contacts/contacts-operations'\r\n// import actions from './contacts-actions';\r\n\r\nexport default function ContactForm() {\r\n  const  [name, setName] = useState(\"\");\r\n  const  [number, setNumber] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const items = useSelector(state => state.contacts.items);\r\n\r\n  const handleChange = event => {\r\n    const {name, value} = event.target;\r\n    switch(name) {\r\n      case \"name\" :\r\n        setName(value)\r\n        break;\r\n      case \"number\" :\r\n        setNumber(value)\r\n        break;\r\n    }\r\n  }\r\n   const clearFields = () => {\r\n    setName('');\r\n    setNumber('');\r\n   }\r\n\r\n   const  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n      name,\r\n      number\r\n    };\r\n    // console.log(newContact)\r\n    if (items.find(contact =>contact.name.toLowerCase().includes(newContact.name.toLowerCase()))) {\r\n      clearFields();\r\n          return alert(`I have your contact already Sergey ))), i would call you`);\r\n        }\r\n    // console.log(addContact(newContact))\r\n    dispatch(addContact(newContact));\r\n    clearFields();\r\n\r\n  };\r\n  \r\n  return (\r\n      <form  onSubmit={handleSubmit}>\r\n      <label >\r\n            <input\r\n               type=\"text\"\r\n               name=\"name\"\r\n               pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n               title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n               required\r\n               value={name}\r\n               onChange={handleChange}\r\n               placeholder='name'\r\n            />\r\n      </label>\r\n      <br></br>\r\n      <label>\r\n      <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n            placeholder='phone number'\r\n            />\r\n      </label>\r\n      <br></br>\r\n      <button type=\"submit\">\r\n         Add Contact\r\n      </button>\r\n      </form>\r\n   \r\n);\r\n  }\r\n\r\n ","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {changeFilter} from '../../redux/contacts/contacts-actions'\r\n\r\nconst Filter = ()  => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(state => state.contacts.filter);\r\n  \r\n   return (\r\n     <>\r\n     <label htmlFor=\"\" name=\"filter\"> Find contact by name : </label>\r\n        <input  \r\n            name=\"filter\"\r\n            type=\"text\"   \r\n            value={filter}\r\n            onChange={(event) => dispatch(changeFilter(event))}/>\r\n    </>\r\n   );\r\n };\r\n \r\n\r\n export default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"userMenuTitle\":\"ContactView_userMenuTitle__ri2QF\"};","import ContactList from '../../components/ContactList/ContactList';\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\nimport Filter from 'components/Filter/Filter';\r\nimport s from './ContactView.module.css'\r\nimport { getContacts } from 'redux/contacts/contacts-operations';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nexport default function ContactView() {\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      dispatch(getContacts());\r\n    }, [dispatch]);\r\n \r\n   return (\r\n      <div>\r\n         <div>\r\n            <h1 className={s.userMenuTitle}> Phonebook </h1>\r\n         </div>\r\n         <ContactForm />\r\n         <div>\r\n            <h2 className={s.userMenuTitle}>Contacts</h2>\r\n            <Filter />\r\n            <ContactList />\r\n         </div>\r\n    </div>\r\n   \r\n   );\r\n }\r\n ","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["dispatch","useDispatch","newItems","items","filter","contact","name","toLowerCase","includes","filterContact","useSelector","state","contacts","length","map","id","number","onClick","removeContact","ContactForm","useState","setName","setNumber","handleChange","event","target","value","clearFields","onSubmit","preventDefault","newContact","find","alert","addContact","type","pattern","title","required","onChange","placeholder","htmlFor","changeFilter","ContactView","useEffect","getContacts","className","s","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}